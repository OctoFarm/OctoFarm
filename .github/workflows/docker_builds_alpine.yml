name: Docker Alpine
on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'development'
jobs:
  docker_alpine:
    runs-on: ubuntu-latest
    name: "Docker build alpine"
    steps:
      - name: "Decide tags to use"
        run: |
          if ${{ github.ref == 'refs/heads/master' }} == true; then
            echo 'TAG_EDGE=alpine-latest' >> $GITHUB_ENV
          elif ${{ github.ref == 'refs/heads/development' }} == true; then
            echo 'TAG_EDGE=alpine-dev' >> $GITHUB_ENV
          else
            echo 'TAG_EDGE=alpine-alpha' >> $GITHUB_ENV
          fi
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: octofarm/octofarm
          tag-latest: false
          tag-custom: |
            ${{env.TAG_EDGE}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Show docker tags"
        run: |
          echo '${{ steps.docker_meta.outputs.tags }}'
      -
        name: Build and push (alpine)
        id: docker_build_alpine
        uses: docker/build-push-action@v2
        with:
          file: ./docker/alpine.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
