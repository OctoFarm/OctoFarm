name: Docker Monolithic
on:
  pull_request:
  workflow_run:
    workflows: [ Release ]
    types:
      - completed
jobs:
  docker:
    name: "Docker build"
    runs-on: ubuntu-latest
    steps:
      - name: "Decide tags to use"
        run: |
          if ${{ github.ref == 'refs/heads/releases/**' }} == true; then
            echo 'TAG_EDGE=monolithic-latest' >> $GITHUB_ENV
          fi
          if ${{ github.ref == 'refs/heads/betas/**' }} == true; then
            echo 'TAG_EDGE=monolithic-beta' >> $GITHUB_ENV
          fi
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
      # Check to see if changes have occurred in client / server directories
      - name: Detecting changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            app:
            - 'server/app.js'
            - 'server/app-core.js'
            - 'server/app-env.js'
            - 'server/app-fallbacks.js'
            - 'server/migrate-mongo-config.js'
            - 'server/tasks.js'
            - 'server/cache/**'
            - 'server/constants/**'
            - 'server/exceptions/**'
            - 'server/modules/**'
            - 'server/handlers/**'
            - 'server/middleware/**'
            - 'server/migrations/**'
            - 'server/models/**'
            - 'server/routes/**'
            - 'server/services/**'
            - 'server/store/**'
            - 'server/utils/**'
            - 'server/templates/**'
            - 'server/*.json'
            - 'client/index.js'
            - 'client/webpack.config.js'
            - 'client/css/**'
            - 'client/js/**'
            - 'client/assets/**'
            - 'client/entry/**'
            - 'client/*.json'
      - name: Docker meta
        if: steps.filter.outputs.app == 'true'
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: octofarm/octofarm
          # x.y.z versioning (not strictly 'vx.y.z' semver)
          tag-match: ^(\d+\.)?(\d+\.)?(\*|\d+)$
          tag-custom: |
            ${{env.TAG_EDGE}}-{{version}}
      - name: Set up QEMU
        if: steps.filter.outputs.app == 'true'
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: steps.filter.outputs.app == 'true'
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request' || steps.filter.outputs.app == 'true'
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: "Show docker tags"
        if: steps.filter.outputs.app == 'true'
        run: |
          echo '${{ steps.docker_meta.outputs.tags }}'
      - name: Build and push
        if: steps.filter.outputs.app == 'true'
        id: docker_build_monolithic
        uses: docker/build-push-action@v2
        with:
          file: ./monolithic.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Image digest
        if: steps.filter.outputs.app == 'true'
        run: echo ${{ steps.docker_build.outputs.digest }}
