name: Release Master Version
on:
  pull_request:
    types: [closed]
    branches:
      - master
    paths-ignore:
      - "server/package.json"
      - "client/package.json"
      - "server/package-lock.json"
      - "client/package-lock.json"
      - "package.json"
      - "package-lock.json"

jobs:
  master-version-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      INPUT_TOKEN: ''
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      # Checkout the development repository
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: master
          token: ${{ secrets.TOKEN_ACTION }}
      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      # Check to see if changes have occurred in client / server directories
      - name: Detecting changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            server:
            - 'server/app.js'
            - 'server/app-core.js'
            - 'server/app-env.js'
            - 'server/app-fallbacks.js'
            - 'server/migrate-mongo-config.js'
            - 'server/tasks.js'
            - 'server/cache/**'
            - 'server/constants/**'
            - 'server/exceptions/**'
            - 'server/handlers/**'
            - 'server/middleware/**'
            - 'server/migrations/**'
            - 'server/models/**'
            - 'server/routes/**'
            - 'server/services/**'
            - 'server/store/**'
            - 'server/utils/**'
            - 'server/views/**'
            client:
            - 'client/index.js'
            - 'client/webpack.config.js'
            - 'client/css/**'
            - 'client/js/**'
      # Install node v16 to use.
      - name: Use Node
        uses: actions/setup-node@v2
        with:
          node-version: "16.16.0"

      # Run the server release sequence
      - name: server build and release
        if: steps.filter.outputs.client == 'true' || steps.filter.outputs.server == 'true'
        run: |
          npm ci --no-optional
          npm run release

      # Run the client release sequence
      - name: client build
        if: steps.filter.outputs.client == 'true' || steps.filter.outputs.server == 'true'
        run: |
          rm -Rf ../server/views/assets/dist
          cd ./client
          npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
          npm ci --no-optional
          npm run build
          cd ../
          git status

        ## commit to repo, and prep pre-release
      - name: commit-changes-made
        if: steps.filter.outputs.client == 'true' || steps.filter.outputs.server == 'true'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: master
          commit_message: "ci(main) - release [skip ci]"
          commit_user_name: NotExpectedYet
          commit_user_email: online@notexpectedyet.com
          commit_author: James Mackay <online@notexpectedyet.com>
