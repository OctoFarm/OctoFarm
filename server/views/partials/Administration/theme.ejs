<% let base = '..' %>
<% let infoAlert = base + '/octofarm-title-info.ejs' %>
<% let alert = base + '/octofarm-alert.ejs' %>
<% let textInput = base + '/octofarm-text-input.ejs' %>

<div class="row">
    <div class="col-12">
        <%- include(alert, {
        alertType: "secondary",
        alertMessage: "Settings relating to the OctoFarm client theme. These changes are applied to all users utilising the client."
        })
        %>
    </div>
    <div class="col-12 col-md-4 col-lg-4">
        <%- include(infoAlert, {
        title: "Application Title",
        infoID: "infoApplicationTitle",
        infoText: "Replace 'OctoFarm' across the interface with your own custom application name"
        })
        %>
        <%- include(textInput, {
        inputID: "serverApplicationTitle",
        inputType: "text",
        inputTag: "Title",
        inputPlaceholder: octoFarmPageTitle,
        inputValue: octoFarmPageTitle,
        requiresRestart: true
        })
        %>
        <hr>
        <%- include(infoAlert, {
        title: "Light or Dark Mode",
        infoID: "infoLightOrDarkMode",
        infoText: "The OctoFarm theme detects your systems OS dark mode settings to apply dark/light mode. Please use this to override."
        })
        %>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="flexRadioDefault" id="themeDarkMode">
            <label class="form-check-label" for="themeDarkMode">
                Dark Mode
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="flexRadioDefault" id="themeLightMode">
            <label class="form-check-label" for="themeLightMode">
               Light Mode
            </label>
        </div>
        <hr>
        <%- include(infoAlert, {
        title: "Main Colour",
        infoID: "infoMainColour",
        infoText: "Replace the main colour used across the interface"
        })
        %>
        <label for="mainApplicationColour" class="form-label">Color picker</label>
        <input type="color" class="form-control form-control-color" id="mainApplicationColour" value="#7a4cc7" title="Choose your color">
        <hr>
        <%- include(infoAlert, {
        title: "Main Accent Colour",
        infoID: "infoMainAccentColou",
        infoText: "Replace the main accent colour used across the interface"
        })
        %>
        <label for="mainApplicationAccentColour" class="form-label">Color picker</label>
        <input type="color" class="form-control form-control-color" id="mainApplicationAccentColour" value="#a480e5" title="Choose your color">
        <hr>
    </div>
    <div class="col-12 col-md-12 col-lg-6">
        <%- include(infoAlert, {
        title: "Background",
        infoID: "infoBackground",
        infoText: "Click the button below to upload your background image. <br><small>You may need to refresh your browser cache if this doesn't apply straight away.</small>"
        })
        %>
        <form action="/settings/backgroundUpload"
              enctype="multipart/form-data" method="POST">
            <div class="row">
                <div class="col-12 col-sm-6 col-md-8 col-lg-10 mt-2">
                    <input class="form-control" type="file"
                           name="myFile"
                           accept="image/jpeg,image/png,image/jpg"/>
                </div>
                <div class="col-12 col-sm-6 col-md-4 col-lg-2">
                    <input  class="btn btn-outline-success mt-2"
                            type="submit" value="Upload"
                            accept="image/jpeg,image/png,image/jpg">
                </div>
            </div>
        </form>
        <p> Supports <code>PNG, JPG, JPEG</code></p>
        <hr>
        <h6>Current</h6>
        <div class="ratio ratio-16x9">
          <img class="p-3" width="100%" src="/images/bg.jpg">
        </div>
    </div>
</div>
<script>
    const darkModeCheck = document.getElementById("themeDarkMode")
    const lightModeCheck = document.getElementById("themeLightMode")

    const darkMode = darkmode.getSavedColorScheme();

    if(darkMode === "dark"){
        darkModeCheck.checked = true;
        lightModeCheck.checked = false;
    }else{
        darkModeCheck.checked = false;
        lightModeCheck.checked = true;
    }

    darkModeCheck.onclick = function(e){
        darkmode.setDarkMode(true);
    }
    lightModeCheck.onclick = function(e){
        darkmode.setDarkMode(false);
    }
</script>
