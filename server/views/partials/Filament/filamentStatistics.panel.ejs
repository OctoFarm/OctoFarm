<% let displayNone = "d-none" %>
<% if(serverSettings.filamentManager){ %>
    <% displayNone = ""; %>
<% } %>
<div class="row p-1">
    <div class="col-12">
        <center>
            <div class="progress mt-0 mb-2">
                <div
                        id="filamentUsedProgress"
                        class="progress-bar progress-bar-striped bg-warning"
                        role="progressbar"
                        style="width: <%= (statistics.used / statistics.total) * 100%>% "
                        aria-valuenow="<%= (statistics.used / statistics.total) * 100%>%"
                        aria-valuemin="0"
                        aria-valuemax="100"
                >
                    <%= ((statistics.used / statistics.total) * 100).toFixed(0)  %>%
                </div>
                <div
                        id="filamentRemainingProgress"
                        class="progress-bar progress-bar-striped bg-success"
                        role="progressbar"
                        style="width: <%= ( (statistics.total - statistics.used) / statistics.total) * 100%>% "
                        aria-valuenow="<%= ( (statistics.total - statistics.used) / statistics.total) * 100%>%"
                        aria-valuemin="0"
                        aria-valuemax="100"
                >
                    <%= (( (statistics.total - statistics.used) / statistics.total) * 100).toFixed(0)%>%
                </div>
            </div>
        </center>

    </div>
    <div class="col-lg-12 table-responsive">
        <table class="table-hover table table-dark table-hover">
            <thead id="filamentOverviewTableHeader">
            <tr>
                <td scope="row">Material Overview: </td>
                <% statistics.materialBreakDown.forEach(used => { %>
                    <th scope="col"><%= used.name %></th>
                <%   }) %>
            </tr>
            </thead>
            <tbody id="filamentOverviewTable">
            <tr>
                <td scope="row">Remaining <span class="badge badge-success ml-2"><%= (statistics.total - statistics.used / 1000 ).toFixed(2)%>kg</span></td>
                <% statistics.materialBreakDown.forEach(used => { %>
                    <th scope="col"><%= ((used.total - used.used) / 1000).toFixed(0) %>kg</th>
                <%   }) %>
            </tr>
            <tr>
                <td scope="row">Used <span class="badge badge-warning ml-2"><%= (statistics.used / 1000).toFixed(2) %>kg</span></td>
                <% statistics.materialBreakDown.forEach(used => { %>
                    <th scope="col"><%= (used.used /1000).toFixed(2) %>kg</th>
                <%   }) %>
            </tr>
            <tr>
                <th scope="row">Weight<span class="badge badge-light  ml-2"><%= (statistics.total / 1000).toFixed(0) %>kg</span></th>
                <% statistics.materialBreakDown.forEach(used => { %>
                    <th scope="col"> <%= (used.total /1000 ).toFixed(2)%>kg</th>
                <%   }) %>
            </tr>
            <tr>
                <th scope="row">Cost <span class="badge badge-info ml-2"><%= statistics.price.toFixed(2) %></span></th>
                <% statistics.materialBreakDown.forEach(used => { %>
                    <th scope="col"><%= used.price.toFixed(2) %></th>
                <%   }) %>
            </tr>
            </tbody>
        </table>
    </div>
</div>
