/*! For license information please see sse.client.1.6.8.min.js.LICENSE.txt */
!function(){"use strict";const{parse:e,stringify:t}=JSON,{keys:n}=Object,o=String,s={},r="object",a=(e,t)=>t,c=e=>e instanceof o?o(e):e,i=(e,t)=>"string"==typeof t?new o(t):t,u=(e,t,a,c)=>{const i=[];for(let u=n(a),{length:l}=u,d=0;d<l;d++){const n=u[d],l=a[n];if(l instanceof o){const o=e[l];typeof o!==r||t.has(o)?a[n]=c.call(a,n,o):(t.add(o),a[n]=s,i.push({k:n,a:[e,t,o,c]}))}else a[n]!==s&&(a[n]=c.call(a,n,l))}for(let{length:e}=i,t=0;t<e;t++){const{k:e,a:n}=i[t];a[e]=c.call(a,e,u.apply(null,n))}return a},l=function(e){return e&&"[object Function]"==={}.toString.call(e)},d="CLIENT",p="UNKNOWN",g={FAILED_VALIDATION_PATH:{type:d,color:"danger",code:"FAILED_VALIDATION_PATH",message:"Input validation failed, no path was supplied",statusCode:412},FAILED_VALIDATION_KEY:{type:d,color:"danger",code:"FAILED_VALIDATION_KEY",message:"Input validation failed, no key was supplied",statusCode:412},FAILED_STATE_UPDATE:{type:d,color:"warning",code:"FAILED_STATE_UPDATE",message:"There was an issue updating the printer state",statusCode:412},UNKNOWN_ERROR:{type:p,color:"danger",code:"UNKNOWN_ERROR",message:"We encountered an unknown error! Please help the developer out and send a issue report!",statusCode:999},SILENT_ERROR:{type:p,color:"danger",code:"SILENT_ERROR",message:"",statusCode:999}};class E extends Error{static hasErrorNotificationBeenTriggered=!1;constructor(e,t){super(),Object.assign(e,t),this.name="OctoFarm Error",this.type=e.type,this.code=e.code,this.message=e.message,this.errors=e.errors,this.meta=e.meta,this.statusCode=e.statusCode,this.color=e.color,E.hasErrorNotificationBeenTriggered=!0}}let f,h,I=1;const T=function(e,t){let n,o;return function(){o=l(t)?t:function(){return t};const s=this,r=arguments,a=function(){n=null,e.apply(s,r)};clearTimeout(n),n=setTimeout(a,o())}}((function(){y(),I*=2,I>=64&&(I=64)}),(function(){return 1e3*I}));function y(t){t?h=t:t=h,f=new EventSource(t),f.onmessage=async function(t){if(t.data){const n=await async function(t){try{return((t,n)=>{const o=e(t,i).map(c),s=o[0],l=n||a,d=typeof s===r&&s?u(o,new Set,s,l):s;return l.call({"":d},"",d)})(t)}catch(e){return!1}}(t.data);postMessage(n)}},f.onopen=function(e){console.debug("Connected to "+t),I=1},f.onerror=async function(e){console.error("Issue with SSE connection... "),postMessage(!1),f.close(),T();const t=g.SILENT_ERROR;throw t.message=`SSE Error - ${e}`,new E(t)},f.onclose=async function(){console.warning("Closed SSE connection... "),postMessage(!1),f.close(),T()}}self.addEventListener("message",(function(e){y(e.data.url)}),!1)}();
//# sourceMappingURL=sse.client.1.6.8.min.js.map