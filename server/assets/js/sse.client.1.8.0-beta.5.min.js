/*! For license information please see sse.client.1.8.0-beta.5.min.js.LICENSE.txt */
(()=>{"use strict";const{parse:e,stringify:t}=JSON,{keys:n}=Object,o=String,s={},r="object",a=(e,t)=>t,c=e=>e instanceof o?o(e):e,i=(e,t)=>"string"==typeof t?new o(t):t,l=(e,t,a,c)=>{const i=[];for(let l=n(a),{length:u}=l,d=0;d<u;d++){const n=l[d],u=a[n];if(u instanceof o){const o=e[u];typeof o!==r||t.has(o)?a[n]=c.call(a,n,o):(t.add(o),a[n]=s,i.push({k:n,a:[e,t,o,c]}))}else a[n]!==s&&(a[n]=c.call(a,n,u))}for(let{length:e}=i,t=0;t<e;t++){const{k:e,a:n}=i[t];a[e]=c.call(a,e,l.apply(null,n))}return a},u=function(e){return e&&"[object Function]"==={}.toString.call(e)},d="CLIENT",p="UNKNOWN",f={FAILED_VALIDATION_PATH:{type:d,color:"danger",code:"FAILED_VALIDATION_PATH",message:"Input validation failed, no path was supplied",statusCode:412},FAILED_VALIDATION_KEY:{type:d,color:"danger",code:"FAILED_VALIDATION_KEY",message:"Input validation failed, no key was supplied",statusCode:412},FAILED_STATE_UPDATE:{type:d,color:"warning",code:"FAILED_STATE_UPDATE",message:"There was an issue updating the printer state",statusCode:412},UNKNOWN_ERROR:{type:p,color:"danger",code:"UNKNOWN_ERROR",message:"We encountered an unknown error! Please help the developer out and send a issue report!",statusCode:999},SILENT_ERROR:{type:p,color:"danger",code:"SILENT_ERROR",message:"",statusCode:999}};class g extends Error{constructor(e,t){super(),Object.assign(e,t),this.name="OctoFarm Error",this.type=e.type,this.code=e.code,this.message=e.message,this.errors=e.errors,this.meta=e.meta,this.statusCode=e.statusCode,this.color=e.color,g.hasErrorNotificationBeenTriggered=!0}}var E,h;(h="hasErrorNotificationBeenTriggered")in(E=g)?Object.defineProperty(E,h,{value:false,enumerable:!0,configurable:!0,writable:!0}):E[h]=false;let y,I,T=1;const A=function(e,t){let n,o;return function(){o=u(t)?t:function(){return t};const s=this,r=arguments,a=function(){n=null,e.apply(s,r)};clearTimeout(n),n=setTimeout(a,o())}}((function(){N(),T*=2,T>=64&&(T=64)}),(function(){return 1e3*T}));function N(t){t?I=t:t=I,y=new EventSource(t),y.onmessage=async function(t){if(t.data){const n=await async function(t){try{return((t,n)=>{const o=e(t,i).map(c),s=o[0],u=n||a,d=typeof s===r&&s?l(o,new Set,s,u):s;return u.call({"":d},"",d)})(t)}catch(e){return!1}}(t.data);postMessage(n)}},y.onopen=function(e){console.debug("Connected to "+t),T=1},y.onerror=async function(e){console.error("Issue with SSE connection... "),postMessage(!1),y.close(),A();const t=f.SILENT_ERROR;throw t.message=`SSE Error - ${e}`,new g(t)},y.onclose=async function(){console.warning("Closed SSE connection... "),postMessage(!1),y.close(),A()}}self.addEventListener("message",(function(e){N(e.data.url)}),!1)})();
//# sourceMappingURL=sse.client.1.8.0-beta.5.min.js.map