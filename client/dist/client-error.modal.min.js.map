{"version":3,"sources":["webpack://@notexpectedyet/octofarm-client/./js/exceptions/error.types.js","webpack://@notexpectedyet/octofarm-client/./js/exceptions/octofarm-client.exceptions.js","webpack://@notexpectedyet/octofarm-client/./js/client-error.modal.js"],"names":["ClientErrors","type","color","code","message","statusCode","dealingWithError","openErrorModal","options","name","apiErrorTitle","document","getElementById","apiErrorMessage","apiDeveloperInfo","innerHTML","returnErrorMessage","className","lineNumber","columnNumber","fileName","stack","returnModalDeveloperInfo","setTimeout","$","modal","handleEvent","event","reason","console","trace","JSON","stringify","window","onunhandledrejection"],"mappings":"mBAAA,MCGaA,EAsBI,CACbC,KDtBO,UCuBPC,MAAO,SACPC,KAAM,gBACNC,QACE,0FACFC,WAAY,KC5BhB,IAAIC,GAAmB,EA6BvB,SAASC,EAAeC,GACjBA,GAASH,aACZG,EAAQH,WAAaL,EAA2BK,WAChDG,EAAQC,KAAOT,EAA2BC,MAE5C,MAAMS,EAAgBC,SAASC,eAAe,iBACxCC,EAAkBF,SAASC,eAAe,mBAC1CE,EAAmBH,SAASC,eAAe,oBACjDF,EAAcK,UAAY,IAAIP,GAASC,OACvCI,EAAgBE,UApClB,SAA4BP,GAC1B,IAAIH,EAAa,IAAIG,GAASH,cAE9B,MAAO,qBAEFG,EAAQC,cAAcJ,8KAKtBG,EAAQJ,cA0BeY,CAAmBR,GAC/CK,EAAgBI,UAAY,QAAQT,GAASN,QAC7CY,EAAiBC,UAxBnB,SAAkCP,GAChC,MAAO,qDAGGA,GAASU,4BACVV,GAASW,8BAEdX,GAASY,SAAW,mBAAqBZ,GAASY,SAAW,OAAS,WACtEZ,GAASa,MAAQ,oBAAsBb,GAASa,MAAQ,sBAgB/BC,CAAyBd,GACtDe,YAAW,KACTC,EA3C8B,uBA2CDC,MAAM,UAClC,KAIL,SAASC,IACFC,OAAOC,QAGVrB,EAAeoB,MAAMC,QACrBC,QAAQC,MAAM,eAAgBC,KAAKC,UAAUL,SAH7CpB,EAAeoB,OAOnBM,OAAOC,qBAAuB,SAAUP,GACjCrB,IACHoB,EAAYC,EAAMC,QAClBtB,GAAmB,K","file":"client-error.modal.min.js","sourcesContent":["const errorTypes = {\r\n  CLIENT: \"CLIENT\",\r\n  SERVER: \"SERVER\",\r\n  NETWORK: \"NETWORK\",\r\n  UNKNOWN: \"UNKNOWN\"\r\n};\r\n\r\nexport { errorTypes };\r\n","import {errorTypes} from \"./error.types\";\r\n\r\n//FIXME: Needs updating for actual usage.\r\nexport const ClientErrors = {\r\n  FAILED_VALIDATION_PATH: {\r\n    type: errorTypes.CLIENT,\r\n    color: \"danger\",\r\n    code: \"FAILED_VALIDATION_PATH\",\r\n    message: \"Input validation failed, no path was supplied\",\r\n    statusCode: 412\r\n  },\r\n  FAILED_VALIDATION_KEY: {\r\n    type: errorTypes.CLIENT,\r\n    color: \"danger\",\r\n    code: \"FAILED_VALIDATION_KEY\",\r\n    message: \"Input validation failed, no key was supplied\",\r\n    statusCode: 412\r\n  },\r\n  FAILED_STATE_UPDATE: {\r\n    type: errorTypes.CLIENT,\r\n    color: \"warning\",\r\n    code: \"FAILED_STATE_UPDATE\",\r\n    message: \"There was an issue updating the printer state\",\r\n    statusCode: 412\r\n  },\r\n  UNKNOWN_ERROR: {\r\n    type: errorTypes.UNKNOWN,\r\n    color: \"danger\",\r\n    code: \"UNKNOWN_ERROR\",\r\n    message:\r\n      \"We encountered an unknown error! Please help the developer out and send a issue report!\",\r\n    statusCode: 999\r\n  }\r\n};\r\n","import {ClientErrors} from \"./exceptions/octofarm-client.exceptions\";\r\n\r\nconst octoFarmErrorModalElement = \"#octofarmErrorModal\";\r\nlet dealingWithError = false;\r\n\r\nfunction returnErrorMessage(options) {\r\n  let statusCode = `(${options?.statusCode})`;\r\n\r\n  return `\r\n     <br>\r\n     ${options.name} ERROR ${statusCode}: \r\n     <br>\r\n     <div class=\"py-3\">\r\n        Please report this error to <a href=\"https://github.com/octofarm/octofarm/issues\">OctoFarm Issues</a>!\r\n     </div>\r\n     ${options.message}\r\n  `;\r\n}\r\n\r\nfunction returnModalDeveloperInfo(options) {\r\n  return `\r\n    <code>\r\n    <u>FILE INFO</u><br>\r\n    LINE: ${options?.lineNumber}<br>\r\n    COL: ${options?.columnNumber}<br>\r\n   \r\n    ${options?.fileName ? \"<b>FILE:</b><br>\" + options?.fileName + \"<br>\" : \"\"}\r\n    ${options?.stack ? \"<b>STACK:</b><br>\" + options?.stack : \"\"}\r\n    </code>\r\n  `;\r\n}\r\n\r\nfunction openErrorModal(options) {\r\n  if (!options?.statusCode) {\r\n    options.statusCode = ClientErrors.UNKNOWN_ERROR.statusCode;\r\n    options.name = ClientErrors.UNKNOWN_ERROR.type;\r\n  }\r\n  const apiErrorTitle = document.getElementById(\"apiErrorTitle\");\r\n  const apiErrorMessage = document.getElementById(\"apiErrorMessage\");\r\n  const apiDeveloperInfo = document.getElementById(\"apiDeveloperInfo\");\r\n  apiErrorTitle.innerHTML = ` ${options?.name}`;\r\n  apiErrorMessage.innerHTML = returnErrorMessage(options);\r\n  apiErrorMessage.className = `text-${options?.color}`;\r\n  apiDeveloperInfo.innerHTML = returnModalDeveloperInfo(options);\r\n  setTimeout(() => {\r\n    $(octoFarmErrorModalElement).modal(\"show\");\r\n  }, 3000)\r\n\r\n}\r\n\r\nfunction handleEvent() {\r\n  if (!event?.reason) {\r\n    openErrorModal(event);\r\n  } else {\r\n    openErrorModal(event.reason);\r\n    console.trace(\"TRACE BACK: \", JSON.stringify(event));\r\n  }\r\n}\r\n\r\nwindow.onunhandledrejection = function (event) {\r\n  if (!dealingWithError) {\r\n    handleEvent(event.reason);\r\n    dealingWithError = true;\r\n  }\r\n};\r\n"],"sourceRoot":""}