/*! For license information please see amialive.runner.min.js.LICENSE.txt */
(()=>{"use strict";const{parse:n,stringify:e}=JSON,{keys:t}=Object,o=String,c={},i="object",r=(n,e)=>e,s=n=>n instanceof o?o(n):n,l=(n,e)=>"string"==typeof e?new o(e):e,a=(n,e,r,s)=>{const l=[];for(let a=t(r),{length:u}=a,f=0;f<u;f++){const t=a[f],u=r[t];if(u instanceof o){const o=n[u];typeof o!==i||e.has(o)?r[t]=s.call(r,t,o):(e.add(o),r[t]=c,l.push({k:t,a:[n,e,o,s]}))}else r[t]!==c&&(r[t]=s.call(r,t,u))}for(let{length:n}=l,e=0;e<n;e++){const{k:n,a:t}=l[e];r[n]=s.call(r,n,a.apply(null,t))}return r},u=function(n){return n&&"[object Function]"==={}.toString.call(n)},f=async function(){if(location.href.includes("submitEnvironment")){const n=window.location.protocol+"//"+window.location.host;return window.location.replace(n),!1}return window.location.reload(),!1};let d,w=3,m=!1,y=!1,g=0;const v=function(n,e){let t,o;return function(){o=u(e)?e:function(){return e};const c=this,i=arguments,r=function(){t=null,n.apply(c,i)};clearTimeout(t),t=setTimeout(r,o())}}((function(){p(),w*=2,w>=64&&(w=64)}),(function(){return 1e3*w}));function h(n){g=n,m||(m=setInterval((()=>{w<=1?(clearInterval(m),m=!1):(g-=1,document.getElementById("lostServerConnectionTimer").innerHTML=g)}),1e3))}function p(){d=new EventSource("/amialive"),d.onmessage=async function(e){if(null!==e?.data){window.serverOffline=!1,await async function(e){try{return((e,t)=>{const o=n(e,l).map(s),c=o[0],u=t||r,f=typeof c===i&&c?a(o,new Set,c,u):c;return u.call({"":f},"",f)})(e)}catch(n){return!1}}(e.data);const t=document.getElementById("lostServerConnection");t&&t.className.includes("show")&&(e.data.loginRequired?await f():await b())}},d.onopen=function(n){console.debug("Connected to servers Am I Alive stream..."),w=3},d.onerror=async function(n){window.serverOffline=!0,console.debug("Server connection lost! Re-connecting in... "+w+"s"),h(w),console.error(n),await S(),d.close(),v()},d.onclose=async function(n){window.serverOffline=!0,console.debug("Server connection closed! Re-establishing..."+w+"s"),h(w),console.warn(n),await S(),d.close(),v()}}const S=async function(){document.getElementById("forceRefreshPageButton").addEventListener("click",(()=>{f()})),y||(y=setTimeout((()=>{$("#lostServerConnection").modal("show"),y=!1}),2e3))},b=async function(){$("#lostServerConnection").modal("hide")};p()})();
//# sourceMappingURL=amialive.runner.min.js.map